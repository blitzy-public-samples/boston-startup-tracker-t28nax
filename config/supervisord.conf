; Supervisor configuration file for managing processes in the Boston Startup Tracker application

[supervisord]
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor
nodaemon=true

[supervisorctl]

[program:backend]
command=gunicorn --workers 4 --bind 0.0.0.0:5000 wsgi:app
directory=/app/backend
user=appuser
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/backend.err.log
stdout_logfile=/var/log/supervisor/backend.out.log

[program:celery_worker]
command=celery -A tasks worker --loglevel=info
directory=/app/backend
user=appuser
numprocs=2
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/celery_worker.err.log
stdout_logfile=/var/log/supervisor/celery_worker.out.log

[program:celery_beat]
command=celery -A tasks beat --loglevel=info
directory=/app/backend
user=appuser
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/celery_beat.err.log
stdout_logfile=/var/log/supervisor/celery_beat.out.log

[program:data_collection]
command=python data_collection_script.py
directory=/app/data_collection
user=appuser
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/data_collection.err.log
stdout_logfile=/var/log/supervisor/data_collection.out.log

; Human tasks:
; - Review and adjust the number of Gunicorn workers based on server capacity
; - Adjust the number of Celery worker processes based on workload
; - Implement process-specific environment variables if needed
; - Set up log rotation for supervisor log files
; - Configure memory limits for each process to prevent resource exhaustion
; - Implement alerting for process failures or restarts
; - Add additional programs for any other long-running processes in the application
; - Review and adjust user permissions for each process